class Solution {
public:
    TreeNode *helper(vector<int>v,TreeNode* root,int low,int high){
        if(low>high)
        return nullptr;
            int mid =  (low+high)/2;
            root = new TreeNode(v[mid]);
        root->left =   helper(v,root,low,mid-1);
            root->right = helper(v,root,mid+1,high);
       return root;
    }
    
    TreeNode* sortedListToBST(ListNode* head) {
        vector<int>v;
        while(head!=NULL){
            v.push_back(head->val);
            head = head->next;
        }
        TreeNode* root = NULL;
        int low = 0,high = v.size()-1;
        root = helper(v,root,low,high);
        
        return root;
    }
};
