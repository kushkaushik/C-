class FrontMiddleBackQueue {
public:
    vector<int>v;
   
    FrontMiddleBackQueue() {
        
    }
    
    void pushFront(int val) {
        
      v.insert(v.begin(),val);
    }
    
    void pushMiddle(int val) {
        // x++;
        int m = v.size()/2;
        v.insert(v.begin()+m,val);
    }
    
    void pushBack(int val) {
        // x++;
        v.push_back(val);
    }
    
    int popFront() {
        if(v.size() == 0)
            return -1;
      
        int mt = v[0];
       v.erase(v.begin()+0);
        return mt;
    }
    
    int popMiddle() {
         if(v.size() == 0)
            return -1;
        int mid = (v.size()-1)/2;
        int mt = v[mid];
       v.erase(v.begin()+mid);
        return mt;
    }
    
    int popBack() {
         if(v.size() == 0)
            return -1;
        int x = v[v.size()-1];
        v.pop_back();
        return x;
    }
};
