class Solution {
public:
    ListNode *rever(ListNode* head){
        if(head == NULL)
            return NULL;
        ListNode* prev = NULL;
        ListNode* curr = head;
        ListNode* next;
        while(curr!=NULL){
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
       
    }
    
    
    
    bool isPalindrome(ListNode* head) {
        if(head == NULL || head->next == nullptr)
            return 1;
      ListNode* slow = head;
        ListNode* fast = head;
       while(fast->next!=NULL&&fast->next->next!=NULL){
            slow = slow->next;
            fast = fast->next->next;
        }
        
       
        ListNode *rev = rever(slow->next);
        ListNode *curr = head;
        while(rev!=NULL){
            if(rev->val!=curr->val)
                return false;
            rev = rev->next;
            curr = curr->next;
        }
        return true;
        
        
    }
};
