class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int K) {
        vector<vector<int>>res;
        priority_queue<pair<int,pair<int,int>>>pq;
        for(int i= 0;i<points.size();i++){
            
            {
                if(pq.size()<=K)
                pq.push({points[i][0]*points[i][0]+points[i][1]*points[i][1],{points[i][0],points[i][1]}});
                if(pq.size()>K) pq.pop();
            }
        }
         while(pq.empty() == false){
        vector<int>vm;
       
             pair<int,int>vp = pq.top().second;
            vm.push_back(vp.first);
            vm.push_back(vp.second);
            res.push_back(vm);
             pq.pop();
             
               
        }
        
        return res;
    }
};
