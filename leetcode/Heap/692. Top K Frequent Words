class Solution {
public:
    
     struct cmp{
bool operator()(const pair<int,string>&a,const pair<int,string>&b) const{
    if(a.first!=b.first)
    return a.first<b.first;
    return a.second>b.second;
}
};

    
    vector<string> topKFrequent(vector<string>& words, int k) {
    unordered_map<string,int>mp;
        priority_queue<pair<int,string>,vector<pair<int,string>>,cmp>vp;
       for(auto x:words)
           mp[x]++;
        for(auto j:mp){
          
            vp.push({j.second,j.first});
            
            }    
        
        
        
        vector<string>vs;
        while(k--){
            vs.push_back(vp.top().second);
            vp.pop();
        }
     
        return vs;
        
    }
};
