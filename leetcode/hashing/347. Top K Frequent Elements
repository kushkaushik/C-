class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
     unordered_map<int,int>mp;
  for(auto x:nums)
  mp[x]++;
  // int k = 2;

  priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
  for(auto x:mp){
    pq.push({x.second,x.first});
    if(pq.size()>k)
    pq.pop();
  }

  vector<int>res;
  while(pq.empty() == false){
    res.push_back(pq.top().second);
    pq.pop();
  }
  for(auto x:res)
  cout<<x<<" ";

 

        return res;
    }
};
