class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
       bool flag = false;
        int l = nums.size();
        int temp[nums.size()+1];
        fill(temp,temp+l+1,false);
        for(int i=0;i<l;i++){
            if(nums[i]>0 && nums[i]<=l)
                temp[nums[i]] = true;
        }
        for(int i=1;i<=l;i++){
            if(temp[i] == false)
                return i;
        }
        return l+1;
    
        }
};

////

class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
       if(nums.size() == 0)
           return 1;
        unordered_set<int>us(nums.begin(),nums.end());
        int temp =-1;
        int i;
        for( i = 1;i<=nums.size();i++){
            if(us.find(i) == us.end())
                {temp = i;break;}
        }
             if(temp == -1)
                 return i;
                return temp;
    }
};
